.# vim: ft=nroff
.TH volume 1 volume\-__0.0.1
.SH NAME
volume \- a simple wrapper around amixer for changing audio volumes
.SH SYNOPSIS
.LP
.B volume [-v] [CONTROL] [DIRECTION] [AMOUNT]
.LP
.B volume [-v] [CONTROL] on
.LP
.B volume [-v] a[lternate]
.SH DESCRIPTION
.B volume
changes the volume of the given control.
.LP
In the first form,
.B CONTROL
is changed in 
.B DIRECTION
by 
.B AMOUNT.
.LP
In the second form,
.B CONTROL
is turned on, 
and other 
.B CONTROLs
are turned off.
(Master is always turned on.)
.LP
In the third form,
headphone and speaker are swapped,
defaulting to headphone on if both are on,
and to speaker on if both are off.
(Master is always turned on.)
.SH OPTIONS
.TP 5
.B -v
Print what is being done to standard out. 
Useful for scripting with GUI notifiers.
.SH COMMANDS
.SS CONTROLS
.TP 5
.B m[aster]
This is the default.
.TP 5
.B h[eadphones]
.TP 5
.B s[peaker]
.SS DIRECTION
.TP 5
.B +
This is the default.
.TP 5
.B -
.TP 5
.B t[oggle]
Toggle on or off.
.SS AMOUNT
Defaults to 4 decibels.
This option is irrelevant to toggling.
.SH EXAMPLES
.LP
.B volume
increase master volume by 5 db.
.LP
.B volume h -
decrease headphone volume by 5 db.
.LP
.B volume a
swap between headphones and speakers.
.SH CONFIGURATION
.LP
To use your multimedia keys using
.B xbindkeys(1)
and get notifications using 
.B dzen(1)
you might want to add something like:
.IP
"volume -v alternate | dzen2 -l 2 -p 1 -e 'onstart=uncollapse' -ta l"
.IP
    XF86AudioMute
.IP
"volume -v - | dzen2 -p 1 -ta l"
.IP
    XF86AudioLowerVolume
.IP
"volume -v + | dzen2 -p 1 -ta l"
.IP
    XF86AudioRaiseVolume
.LP
to your 
.B "$HOME/.xbindkeys"
and add
.IP
xbindkeys
.LP
to your 
.B $HOME/.xinitrc
.SH EXIT STATUS
exits non-zero on error.
.SH AUTHOR
Noah Birnel
.SH BUGS
I doubt the hardcoded values work for all audio cards.
Probably others.
.SH SEE ALSO
.TP
.BR amixer(1)
.TP
.BR alsamixer(1)
.TP
.BR dzen(1)
.TP
.BR xbindkeys(1)
.SH LICENSE
Copyright 2014 Noah Birnel
.sp
Do whatever you want with this software.

